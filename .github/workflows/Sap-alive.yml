name: Restart SAP BTP Apps (Smart Restart)

on:
  schedule:
    # 每天UTC时间0:10和0:30执行（北京时间8:10和8:30）
    - cron: '15 0 * * *'    # 每天0:10 UTC
    - cron: '50 0 * * *'    # 
    - cron: '0 */6 * * *'   #
  workflow_dispatch:        # 允许手动触发

env:
  CF_CLI_VERSION: "8"            # 明确指定CF CLI版本
  HEALTH_CHECK_INTERVAL: "300"   # 5分钟内跳过健康应用（秒）
  MAX_RETRY: "2"                 # 最大重试次数

jobs:
  restart-apps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install CF CLI (v${{ env.CF_CLI_VERSION }})
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install -y cf${{ env.CF_CLI_VERSION }}-cli

      # 新加坡环境智能重启
      - name: Smart Restart iSAP (Singapore)
        id: smart-restart-sg
        env:
          CF_API_URL: ${{ secrets.CF_API_SG }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_TRACE: "true"
        run: |
          echo "=== 新加坡环境智能检测 ==="
          
          # 登录环境
          if ! cf login -a "$CF_API_URL" -u "$CF_USERNAME" -p "$CF_PASSWORD" \
              -o "fde1f680trial" -s "dev" --skip-ssl-validation; then
            echo "::error::登录失败"
            echo "status=login_failed" >> $GITHUB_OUTPUT
            exit 1
          fi

          # 获取应用状态
          APP_GUID=$(cf app "iSAP" --guid 2>/dev/null)
          LAST_EVENT=$(cf events "iSAP" --json 2>/dev/null | jq -r '.resources[0].created_at' || echo "")
          
          # 健康检查逻辑
          if [[ -z "$APP_GUID" ]]; then
            echo "🆘 应用不存在，需要部署"
            NEED_RESTART=true
          elif [[ "$LAST_EVENT" != "" ]] && \
               [[ $(date +%s -d "$LAST_EVENT") -gt $(($(date +%s) - $HEALTH_CHECK_INTERVAL)) ]]; then
            echo "✅ 应用最近 ${HEALTH_CHECK_INTERVAL} 秒内有活动，跳过重启"
            echo "status=skipped_healthy" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "🔄 检测到应用需要重启"
            NEED_RESTART=true
          fi

          # 执行重启（带重试机制）
          if [[ "$NEED_RESTART" == "true" ]]; then
            for i in $(seq 1 $MAX_RETRY); do
              echo "⏳ 尝试重启 (第 $i 次)"
              if cf restart "iSAP"; then
                echo "✅ 重启成功"
                echo "status=restart_success" >> $GITHUB_OUTPUT
                cf target
                exit 0
              fi
              sleep 5
            done
            echo "::error::重启失败"
            echo "status=restart_failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      # 美国环境智能重启
      - name: Smart Restart s3 (USA)
        id: smart-restart-us
        env:
          CF_API_URL: ${{ secrets.CF_API_US }}
          CF_USERNAME: ${{ secrets.CF_USERNAME }}
          CF_PASSWORD: ${{ secrets.CF_PASSWORD }}
          CF_TRACE: "true"
        run: |
          echo "=== 美国环境智能检测 ==="
          
          # 登录环境
          if ! cf login -a "$CF_API_URL" -u "$CF_USERNAME" -p "$CF_PASSWORD" \
              -o "t2_t2-mcekz8t8" -s "dev" --skip-ssl-validation; then
            echo "::error::登录失败"
            echo "status=login_failed" >> $GITHUB_OUTPUT
            exit 1
          fi

          # 获取应用状态
          APP_GUID=$(cf app "s3" --guid 2>/dev/null)
          LAST_EVENT=$(cf events "s3" --json 2>/dev/null | jq -r '.resources[0].created_at' || echo "")
          
          # 健康检查逻辑
          if [[ -z "$APP_GUID" ]]; then
            echo "🆘 应用不存在，需要部署"
            NEED_RESTART=true
          elif [[ "$LAST_EVENT" != "" ]] && \
               [[ $(date +%s -d "$LAST_EVENT") -gt $(($(date +%s) - $HEALTH_CHECK_INTERVAL)) ]]; then
            echo "✅ 应用最近 ${HEALTH_CHECK_INTERVAL} 秒内有活动，跳过重启"
            echo "status=skipped_healthy" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "🔄 检测到应用需要重启"
            NEED_RESTART=true
          fi

          # 执行重启（带重试机制）
          if [[ "$NEED_RESTART" == "true" ]]; then
            for i in $(seq 1 $MAX_RETRY); do
              echo "⏳ 尝试重启 (第 $i 次)"
              if cf restart "s3"; then
                echo "✅ 重启成功"
                echo "status=restart_success" >> $GITHUB_OUTPUT
                cf target
                exit 0
              fi
              sleep 5
            done
            echo "::error::重启失败"
            echo "status=restart_failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      # 智能报告生成
      - name: Smart Report
        if: always()
        run: |
          echo "=== 智能重启报告 ==="
          echo "新加坡环境: ${{ steps.smart-restart-sg.outputs.status || '未执行' }}"
          echo "美国环境: ${{ steps.smart-restart-us.outputs.status || '未执行' }}"
          echo "工作流状态: ${{ job.status }}"
          
          # 失败状态码传递
          if [[ "${{ job.status }}" == "failure" ]]; then
            echo "::error::检测到失败任务"
            exit 1
          fi
