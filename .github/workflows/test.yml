name: Scheduled Restart of SAP BTP Apps (Fixed Secrets Handling)
on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

env:
  # Á¨¨‰∏ÄÂ±ÇÔºöÈÄöËøáenv‰∏≠ËΩ¨secretsÔºàmatrix‰∏≠ÂèØÂºïÁî®envÔºâ
  CF_API_SG: ${{ secrets.CF_API_SG }}
  CF_USERNAME_SG: ${{ secrets.CF_USERNAME }}
  CF_PASSWORD_SG: ${{ secrets.CF_PASSWORD }}
  CF_API_US: ${{ secrets.CF_API_US }}
  CF_USERNAME_US: ${{ secrets.CF_USERNAME }}
  CF_PASSWORD_US: ${{ secrets.CF_PASSWORD }}

jobs:
  restart-apps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env_name: ["production-sg‚Äù, "dr-us"]
        include:
          - env_name: "production-sg‚Äù
            api_url: ${{ env.CF_API_SG }}          # ÂºïÁî®envÂèòÈáè
            username: ${{ env.CF_USERNAME }}
            password: ${{ env.CF_PASSWORD }}
            org: "fde1f680trial"
            space: ‚Äúdev‚Äù
            apps: ‚Äò[‚ÄúiSAP‚Äù]‚Äô
            
          - env_name: "dr-us"
            api_url: ${{ env.CF_API_US }}
            username: ${{ env.CF_USERNAME }}
            password: ${{ env.CF_PASSWORD }}
            org: "t2-mcekz8t8"
            space: ‚Äúdev‚Äù
            apps: ‚Äò[‚Äús3‚Äù]‚Äô
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install CF CLI
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install -y cf-cli

      - name: Parse Apps JSON
        id: parse-apps
        run: |
          echo "apps_json=${{ matrix.apps }}" >> $GITHUB_OUTPUT

      - name: Login to ${{ matrix.env_name }}
        env:
          CF_API_URL: ${{ matrix.api_url }}
          CF_USERNAME: ${{ matrix.username }}
          CF_PASSWORD: ${{ matrix.password }}
        run: |
          cf login -a "$CF_API_URL" -u "$CF_USERNAME" -p "$CF_PASSWORD" \
            -o "${{ matrix.org }}" -s "${{ matrix.space }}" --skip-ssl-validation
          cf target

      - name: Restart Apps
        run: |
          for app in $(echo ${{ steps.parse-apps.outputs.apps_json }} | tr -d '[],"'); do
            echo "üîÑ Restarting $app in ${{ matrix.space }}"
            cf restart "$app" || echo "‚ùå Failed: $app"
          done

      - name: Verify Status
        run: |
          echo "‚úÖ Apps status in ${{ matrix.space }}:"
          cf apps | grep -E "name|requested state"

